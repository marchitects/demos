/*
 #Grid- und Basiselemente
 */

/* 
##Verhalten des Header-Logos 
Das Logo im Seitenkopf nimmt in der mobilen Ansicht die komplette Breite des Displays ein. Ab Tabletgröße hat es eine feste Breite von 395 Px
```
<a class="logo-container" href="/" itemprop="url">		
	<img class="logo-content" src="../imgopt/logo.svg" alt="DeutscheHandwerksZeitung"/>
	</a>
```
*/
.logo-container {
	width: 100%;
	padding-bottom: 13.7%;
	display: inline-block;
	position: relative;	
	vertical-align: middle;
	overflow:hidden;
	.logo-content {
		display: inline-block;
		position: absolute;
		top: 0;
		left: 0;
	}

	@media (min-width: $screen-sm-min) {
		width: 388px;
		padding-bottom:53px;
	}

}



/*
##Grid-Items

Ein Grid-Item weist ein Standardverhalten in allen Bereichen und Viewportgrößen auf.
Hierzu zählen in erster Linie die Breite, das Floatverhalten und die Abstände.
*/
/*
<strong>Default-Verhalten von Grid-Elementen</strong>

Im Default-Zustand nimmt ein Grid-Element in der Smartphoneansicht die komplette, ab Tabletgröße die halbe Breite des umgebenden Containers ein.
Generell muss jedoch unterschieden werden, ob das Element auf einer ein- oder zweispaltigen Sitefusion zum Einsatz kommt. Diese Unterscheidung wird im weiteren Verlauf beschrieben.
```
.grid-item {
	@extend .col-xs-12;
	@extend .col-sm-6;
	margin-bottom: $elementPadding*2;
}
```
*/

.grid-item {
	@extend .col-xs-12;
	@extend .col-sm-6;
	margin-bottom: $elementPadding*2;
}

/*
<strong>Verhalten auf zweispaltigen Seite</strong>

Befindet sich ein Gridelement auf einer zweispaltigen Seite (#two-column), gibt es zwei Platzierungsmöglichkeiten:

* in der Seitenspalte (#sidebar-right)
* in der Hauptspalte (#mainrow)

In der Seitenspalte nimmt das Gridelement folgende Breiten des umschließenden Containers ein:

* Smartphone: 12/12
* Tablet: 6/12
* Desktop klein: 12/12
* Desktop groß: 12/12

In der Hauptspalte nimmt das Gridelement folgende Breiten des umschließenden Containers ein: 

* Smartphone: 12/12
* Tablet: 6/12
* Desktop klein: 6/12
* Desktop groß: 4/12

Befindet es sich zudem innerhalb eines Article-Tags nimmt es immer volle Breite des umgebenden Containers ein:

 * Entweder als Element im "aside" - zum Beispiel als Downloadkasten
 * Oder volle Breite des article - zum Beispiel als Bildergalerie oder Video

```
#two-column {
	
	#sidebar-right .row .grid-item {
		@extend .grid-item;
		@extend .col-md-12;
	}
	
	#mainrow {
		.grid-item {
			@extend .grid-item;
			@extend .col-lg-4;
		}
		
		article .grid-item {
			@extend .grid-item;
		}
	}

}
```
*/

#two-column {

	#sidebar-right .row .grid-item {
		@extend .grid-item;
		@extend .col-md-12;
	}
	
	#mainrow {
		.grid-item {
			@extend .grid-item;
			@extend .col-lg-4;
		}
		
		article .grid-item {
			@extend .grid-item;
		}
	}

}


/*
<strong>Verhalten in einspaltiger Seite</strong>

Auf einspaltigen Seiten (#one-column) befinden sich alle Elemente in der Hauptspalte (#mainrow). Da die rechte Spalte entfällt, ist diese breiter.
Damit die Grid-Elemente aufgrund ihrer relativen Maße nicht übermäßig breit werden, muss sich das Verhältnis ändern. So erhalten Gridelemente folgende Breiten:

* Smartphone: 12/12
* Tablet: 6/12
* Desktop klein: 4/12
* Desktop groß: 3/12

```
#one-column #mainrow .grid-item {
	@extend .grid-item;
	@extend .col-md-4;
	@extend .col-lg-3;
}
```

*/

#one-column #mainrow .grid-item {
	@extend .grid-item;
	@extend .col-md-4;
	@extend .col-lg-3;
}


/* 
##Boxen
Das Grid-Item "Box" (alle Elemente mit der Klasse .box) ist ein spezielles Grid-Element, dass einen in sich schlüssigen Contentbereich umschließt. Es zeichnet sich durch folgende Eigenschaften aus:

* Hintergrundfarbe (wird über eine Zusatzklasse mitgegeben)
* Ein Headingelement mit Icon (.box-heading)

Boxen können sowohl in der rechten Seitenspalte als auch im Hauptbereich vorkommen. 
```
<section class="box box-primary">
	<div>
		<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Gewinnspiel</span>
		<div class="box-body">Dies ist der Bodytext</div>
	</div>
</section>
```

*/
/*<strong>Styling von Boxen</strong>

Um einer Box einen bestimmten Look zu verpassen, können folgende Parameter übergeben werden:

* $background = Der Hintergrund der gesamten BOX (Wenn "none", dann verliert die Box automatisch das innere Padding)
* $background-body = Der Hintergrunde des Inhaltes einer Box, ausgenommen der Überschrift

Diese Angaben werden über folgendes Mixin gesteuert:
```
mixin box-color ($background:none,$background-body:none) {

	> div {

		@include clearfix;
	
		
		.box-heading {
			text-transform: uppercase;
			font-size: 1.4em;
			font-family: $headings-font-family;
			font-weight: 300;
			display: block;
			margin-bottom: 0.5em;
		}
		    
		@if $background != none {
			@include add-background ($background);
			padding: $elementPadding;
		}
		
		@if $background-body != none {
			.box-body {
			@include add-background ($background-body);
			padding: $elementPadding;
			}	
		}
	}
}
```
*/

@mixin box-color ($background:none,$background-body:none) {

	> div {

		@include clearfix;
	
		/* Styling der Überschrift */
		.box-heading {
			text-transform: uppercase;
			font-size: 1.4em;
			font-family: $headings-font-family;
			font-weight: 300;
			display: block;
			margin-bottom: 0.5em;
		}
		/* Hintergrundfarbe der Box setzen */    
		@if $background != none {
			@include add-background ($background);
			padding: $elementPadding;
		}
		/* Hintergrund des Contents der Box */
		@if $background-body != none {
			.box-body {
			@include add-background ($background-body);
			padding: $elementPadding;
			@include clearfix;
			}	
		}
	}
}

.box {	
	@extend .grid-item;
	@include box-color ();
	.box-body {
		p, address {
			&:last-child {
				margin:0;
			}
		}
		h3, h3 a, .h3 {	
			margin:0 0 5px 0;
		}		
	}
}

/*
<strong>Mögliche Stylingoptionen</strong>
```
<div id="mainrow" class="row">

	<section class="box">
		<div>
			<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Default-Box</span>
			<div class="box-body">Diese Box erhält lediglich die Klasse .box.</div>
		</div>
	</section>

	<section class="box box-gray-lighter">
		<div>
			<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Hellgraue Box</span>
			<div class="box-body">Hier werden die Klassen "box box-gray-lighter" vergeben.</div>
		</div>
	</section>

	<section class="box box-primary">
		<div>
			<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Box in 1. CI-Farbe</span>
			<div class="box-body">Hier werden die Klassen "box box-primary" vergeben.</div>
		</div>
	</section>

	<section class="box box-secondary-white">
		<div>
			<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Box in 2. CI-Farbe mit weißem Body</span>
			<div class="box-body">Hier werden die Klassen "box box-secondary-white" vergeben.</div>
		</div>
	</section>

	<section class="box box-gray-lighter-white">
		<div>
			<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Box in Hellgrau mit weißem Body</span>
			<div class="box-body">Hier werden die Klassen "box box-gray-lighter-white" vergeben.</div>
		</div>
	</section>

	<section class="box box-primary-white">
		<div>
			<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Box in 1. CI-Farbe mit weißem Body</span>
			<div class="box-body">Hier werden die Klassen "box box-primary-white" vergeben.</div>
		</div>
	</section>						

	<section class="box box-secondary-heading">
		<div>
			<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Box mit Heading in 2. CI-Farbe</span>
			<div class="box-body">Hier werden die Klassen "box box-secondary-heading" vergeben.</div>
		</div>
	</section>

	<section class="box box-gray-lighter-heading">
		<div>
			<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Box mit Heading in Hellgrau</span>
			<div class="box-body">Hier werden die Klassen "box box-gray-lighter-heading" vergeben.</div>
		</div>
	</section>

	<section class="box box-primary-heading">
		<div>
			<span class="box-heading"><span class="glyphicon glyphicon-apple" aria="hidden"></span>Box mit Heading in 1. CI-Farbe</span>
			<div class="box-body">Hier werden die Klassen "box box-primary-heading" vergeben.</div>
		</div>
	</section>

</div>
```

*/

.box.box-secondary {
	@include box-color ($brand-secondary,none);
}

.box.box-gray-lighter {
	@include box-color ($gray-lighter,none);
}

.box.box-primary {
	@include box-color ($brand-primary,none);
}

.box.box-secondary-white {
	@include box-color ($brand-secondary,#fff);
}

.box.box-gray-lighter-white {
	@include box-color ($gray-lighter,#fff);
}
.box.box-primary-white {
	@include box-color ($brand-primary,#fff);
}

.box.box-secondary-heading {
	@include box-color ();
	> div {
		.box-heading {
			padding: $elementPadding;
			@include add-background ($brand-secondary);
		}
	}
}

.box.box-gray-lighter-heading {
	@include box-color ();
	> div {
		.box-heading {
			padding: $elementPadding;
			@include add-background ($gray-lighter);
		}
	}
}

.box.box-primary-heading {
	@include box-color ();
	> div {
		.box-heading {
			padding: $elementPadding;
			@include add-background ($brand-primary);
		}
	}
}

/*<strong>Verhalten von Boxen</strong>

Boxen nehmen grundsätzlich die volle Breite des sie umschließenden Containers ein. Innerhalb eines Artikels verlieren Sie jedoch das Padding.
*/
#two-column, #one-column {
	#mainrow {
		.box {
			@extend .col-xs-12;
			@extend .col-sm-12;
			@extend .col-md-12;
			@extend .col-lg-12;
		}
		/* Innerhalb eines Article-Tags verliert eine Box das Padding */
		article {
			.box  {
				padding: 0;
			}	
		}		
	}
}

/* <strong>Bilder in Boxen</strong>

 */
#two-column, #one-column {
	.box {
		img {
			@extend img-responsive;
			float: left;				
			margin: 0 10px 10px 0;				
		}
	}
}


/*
##Content Ad
Die Content Ad stellt eine besondere Form des Boxmodells/Gridelements dar. Ihr Body (.box-body)verfügt im Gegensatz zur Standard-Box über eine feste Höhe und Breite.
Das Schriftbild im Kopfbereich (.box-heading) wird abweichend formatiert.
Wichtig ist, dass die Werbeanzeige, deren Format exakt 250 * 300 Px beträgt, auf allen Endgeräten und bei jeder Platzierung ansprechend dargestellt wird.
Aus diesem Grund wird der die Anzeige beinhaltende Body mittig im Box/Gridelement platziert. Der Box-Container passt sich gleichzeitig an das umschließende Element an. 
```
<div role="note" class="box content-ad">
	<div>
		<span class="box-heading">- Anzeige -</span>
		<div class="box-body">
			<a href="#" title="Werbelink">
				<img src="../img/anzeigen/content_ad.gif" alt="Dummy-Bild">
			</a>
		</div>
	</div>
</div>

```
*/

.box.content-ad, .media-item.content-ad {
	@include box-color ($gray-lighter,none);
	> div {
		padding: 0 0 $elementPadding*2 0 !important;
		overflow: hidden;
		.box-body {
			@include clearfix;
			width: 300px;
			height: 250px;
			overflow: hidden;
			margin: 0 auto;
		}
		.box-heading {
			padding: $elementPadding $elementPadding 0 $elementPadding !important;
			color: $gray !important;
			font-size: 0.9em !important;
			text-align: right !important;
		}
	}
}
/*
##vCards
VCards sind Gridelemente speziell für Adressdaten mit entsprechenden Itemprops. Sie kommen unter anderem auf der Kontakt-Seite und im Anzeigenmarkt vor.
Allerdings besitzen sie im Gegensatz zu Standard-Gridelementen ein etwas anderes Verhalten. 

* Smartphone: 12/12
* Tablet: 6/12
* kleiner Desktop: 6/12
* großer Desktop: 6/12

Der Innenbereich gliedert sich in einen Bild- und einen Adressbereich im Verhältnis 4/8.
```
<div id="two-column">
	<div id="mainrow" class="row">
		<section class="vcard" itemscope="" itemtype="http://schema.org/Person">
			<div class="row">
				<figure>
						<span itemscope="" itemtype="http://schema.org/ImageObject"> 
							<img itemprop="image" class="img-responsive" src="http://www.deutsche-handwerks-zeitung.de/files/smthumbnaildata/150x/1/4/7/3/9/6/Riering.gif" alt="Dummy-Bild">						
						</span>
					</figure>

				<address>
					<h3 itemprop="name">Burkhard Riering</h3>
						 <p itemprop="jobTitle"><strong>Chefredakteur</strong></p>
						 <p>Tel.  <a href="tel:+498247354115"><span itemprop="telephone"> +49 8247 354-115</span></a><br>
						  Fax: +49 8247 354-4115<br>
						  Email-Adresse: <a itemprop="email" href="mailto:burkhard.riering@holzmann-medien.de">burkhard.riering@holzmann-medien.de</a></p>
				</address>
			</div>		
		</section>
		<section class="vcard" itemscope="" itemtype="http://schema.org/Person">
			<div class="row">
				<figure>
						<span itemscope="" itemtype="http://schema.org/ImageObject"> 
						<img itemprop="image" class="img-responsive" src="http://www.deutsche-handwerks-zeitung.de/files/smthumbnaildata/150x/2/1/7/1/3/1/Muck_web.jpg" alt="Dummy-Bild">						
					</span>
				</figure>

				<address>
					<h3 itemprop="name">Frank Muck</h3>
						<p itemprop="jobTitle"><strong>Redaktionsleiter</strong></p>
						<p>Tel. <a href="tel:+498247354115"><span itemprop="telephone">+49 8247 354-115</span></a><br>
						Fax: +49 8247 354-4115<br>
						Email-Adresse: <a itemprop="email" href="mailto:burkhard.riering@holzmann-medien.de">burkhard.riering@holzmann-medien.de</a></p>
				</address>
			</div>		
		</section>
		<section class="vcard" itemscope="" itemtype="http://schema.org/Person">
			<div class="row">
				<figure>
					<span itemscope="" itemtype="http://schema.org/ImageObject"> 
						<img itemprop="image" class="img-responsive" src="http://www.sclia.org/wp-content/uploads/2013/06/generic_avatar_300-e1372531243303.jpg" alt="Dummy-Bild">						
					</span>
				</figure>

				<address>
					<h3 itemprop="name">Eva Schneider</h3>
					<p itemprop="jobTitle"><strong>Redaktionsassistentin</strong></p>
					<p>Tel. <a href="tel:+498247354115"><span itemprop="telephone">+49 8247 354-115</span></a><br>
						Fax: +49 8247 354-4115<br>
						Email-Adresse: <a itemprop="email" href="mailto:burkhard.riering@holzmann-medien.de">burkhard.riering@holzmann-medien.de</a></p>
				</address>
			</div>		
		</section>
		<section class="vcard" itemscope="" itemtype="http://schema.org/Person">
			<div class="row">
				<figure>
					<span itemscope="" itemtype="http://schema.org/ImageObject"> 
						<img itemprop="image" class="img-responsive" src="http://www.deutsche-handwerks-zeitung.de/files/smthumbnaildata/150x/2/1/7/1/3/4/Woerrle_web.jpg" alt="Dummy-Bild">						
					</span>
				</figure>

				<address>
					<h3 itemprop="name">Jana Tashina Wörrle</h3>
						<p itemprop="jobTitle"><strong>Online-Redakteurin</strong></p>
						<p>Tel. <a href="tel:+498247354115"><span itemprop="telephone">+49 8247 354-115</span></a><br>
						Email-Adresse: <a itemprop="email" href="mailto:burkhard.riering@holzmann-medien.de">burkhard.riering@holzmann-medien.de</a></p>
				</address>
			</div>
		</section>
	</div>
</div>					
```
*/

.vcard {
	@extend .grid-item;
	figure {
		@extend .col-xs-4;
		img {
			width: 100%;
			margin: 0 !important;
		}
	}
	address {
		@extend .col-xs-8;
		.h3 {
			margin-top: 0;
		}
	}
}


#two-column #mainrow .vcard {
		@extend .col-lg-6;
		}

#two-column {
	#mainrow {
			.box {
				.vcard {
					@extend .col-xs-12;
					margin-bottom: 0;
				}
			}
	}
}
/*
##Media-Item
Ein Media-Item wird z.B. für die Darstellung von Bildergalerien- und Videolistings benötigt. Es besteht aus folgenden Elementen: 

* Vorschaubild
* Titel mit Icon
* Vorspanntext

Es verhält sich ähnlich eines Gridelements. Zusätzlich ist für das jeweilige erste Element in einer neuen Zeile ein "clear:left;" festgelegt.
Dies ermöglicht, dass alle Media-Items pro Zeile auf der gleichen Höhe sind. Wichtig ist hier, dass diese Media-Items ein DIV umgibt. In diesem DIV
dürfen die ersten Kindelemente nur Media-Items sein, da der nth-child() Selector für den clear:left; alle Kindelemente mitzählt, auch die ohne die Klasse "media-item".
```
<div id="one-column">
	<div id="mainrow" class="row">

		<div>
			<article class="media-item">
				<a href="#" title="Artikeltitel">
					<img src="../imgopt/teaser/dummy-large.jpg" alt="Dummy-Bild"/>
				</a>
				<div>
					<h3><a href="" title=""><span class="glyphicon glyphicon-camera" aria="hidden"></span>Bildergalerie 1</a></h3>
					<p>
						Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce sit amet mauris ut quam luctus lobortis eu vel leo.
					</p>
				</div>							
			</article>

			<article class="media-item">
				<a href="#" title="Artikeltitel">
					<img src="../imgopt/teaser/dummy-large.jpg" alt="Dummy-Bild"/>
				</a>
				<div>
					<h3><a href="" title=""><span class="glyphicon glyphicon-camera" aria="hidden"></span>Bildergalerie 2 mit ziemlich langem Titel begrenzt auf zwei Zeilen und nicht mehr</a></h3>
					<p>
						Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce sit amet mauris ut quam luctus lobortis eu vel leo.
						Lorem ipsum dolor sit amet, consectetur adipiscing elit.
					</p>
				</div>
			</article>

			<article class="media-item">
				<a href="#" title="Artikeltitel">
					<img src="../imgopt/teaser/dummy-large.jpg" alt="Dummy-Bild"/>
				</a>
				<div>
					<h3><a href="" title=""><span class="glyphicon glyphicon-camera" aria="hidden"></span>Bildergalerie 3</a></h3>
					<p>
						Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce sit amet mauris ut quam luctus lobortis eu vel leo.
					</p>
				</div>							
			</article>							

			<div role="note" class="media-item content-ad">
				<div>
					<span class="box-heading">- Anzeige -</span>	
					<div class="box-body">
						<a href="#" title="Werbelink">
							<img src="../img/anzeigen/content_ad.gif" alt="Dummy-Bild"	/>
						</a>
					</div>
				</div>
			</div>
		</div>

	</div>
</div>
```
*/
.media-item {
	@extend .grid-item;
	img {
		width:100%;
	}
	p {
		&:last-child {
			margin:0;
		}
	}
}

// Verhalten in einspaltiger Seite
#one-column {
	#mainrow {
		div {
			.media-item {		
				@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
					&:nth-child(2n+1) {
						clear: left;
					}
				}
				@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
					&:nth-child(3n+1) {
						clear: left;
					}
				}
				@media (min-width: $screen-lg-min) {
					&:nth-child(4n+1) {
						clear: left;
					}
				}
			}
		}
	}
}

// Verhalten auf zweispaltiger Seite
#two-column {
	#mainrow {
		div {
			.media-item {				
				@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
					&:nth-child(2n+1) {
						clear: left;
					}
				}
				@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
					&:nth-child(2n+1) {
						clear: left;
					}
				}
				@media (min-width: $screen-lg-min) {
					&:nth-child(3n+1) {
						clear: left;
					}
				}
			}
		}
	}
}

// Verhalten eines Article-Teaser
.article-teaser {
	@extend .grid-item;
	@extend .teaser;
}


